//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CMM.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class CMMLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, FLOAT=9, 
		INT=10, NAME=11, WS=12;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "Digit", 
		"ExponentPart", "FLOAT", "INT", "NAME", "WS"
	};


	public CMMLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CMMLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'print('", "'+'", "'-'", "'*'", "'/'", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, "FLOAT", "INT", 
		"NAME", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CMM.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CMMLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\xE', 's', '\b', '\x1', '\x4', '\x2', '\t', '\x2', '\x4', 
		'\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', '\x5', 
		'\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', '\t', 
		'\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', '\t', 
		'\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x5', '\v', '\x39', '\n', '\v', '\x3', '\v', '\x6', 
		'\v', '<', '\n', '\v', '\r', '\v', '\xE', '\v', '=', '\x3', '\f', '\x6', 
		'\f', '\x41', '\n', '\f', '\r', '\f', '\xE', '\f', '\x42', '\x3', '\f', 
		'\x3', '\f', '\a', '\f', 'G', '\n', '\f', '\f', '\f', '\xE', '\f', 'J', 
		'\v', '\f', '\x3', '\f', '\x5', '\f', 'M', '\n', '\f', '\x3', '\f', '\x3', 
		'\f', '\x6', '\f', 'Q', '\n', '\f', '\r', '\f', '\xE', '\f', 'R', '\x3', 
		'\f', '\x5', '\f', 'V', '\n', '\f', '\x3', '\f', '\x6', '\f', 'Y', '\n', 
		'\f', '\r', '\f', '\xE', '\f', 'Z', '\x3', '\f', '\x3', '\f', '\x5', '\f', 
		'_', '\n', '\f', '\x3', '\r', '\x6', '\r', '\x62', '\n', '\r', '\r', '\r', 
		'\xE', '\r', '\x63', '\x3', '\xE', '\x3', '\xE', '\a', '\xE', 'h', '\n', 
		'\xE', '\f', '\xE', '\xE', '\xE', 'k', '\v', '\xE', '\x3', '\xF', '\x6', 
		'\xF', 'n', '\n', '\xF', '\r', '\xF', '\xE', '\xF', 'o', '\x3', '\xF', 
		'\x3', '\xF', '\x2', '\x2', '\x10', '\x3', '\x3', '\x5', '\x4', '\a', 
		'\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', 
		'\x13', '\x2', '\x15', '\x2', '\x17', '\v', '\x19', '\f', '\x1B', '\r', 
		'\x1D', '\xE', '\x3', '\x2', '\b', '\x3', '\x2', '\x32', ';', '\x4', '\x2', 
		'G', 'G', 'g', 'g', '\x4', '\x2', '-', '-', '/', '/', '\x5', '\x2', '\x43', 
		'\\', '\x61', '\x61', '\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', 
		'\\', '\x61', '\x61', '\x63', '|', '\x5', '\x2', '\v', '\f', '\xF', '\xF', 
		'\"', '\"', '\x2', '}', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x5', '!', '\x3', 
		'\x2', '\x2', '\x2', '\a', '#', '\x3', '\x2', '\x2', '\x2', '\t', '*', 
		'\x3', '\x2', '\x2', '\x2', '\v', ',', '\x3', '\x2', '\x2', '\x2', '\r', 
		'.', '\x3', '\x2', '\x2', '\x2', '\xF', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x32', '\x3', '\x2', '\x2', '\x2', '\x13', '\x34', '\x3', '\x2', 
		'\x2', '\x2', '\x15', '\x36', '\x3', '\x2', '\x2', '\x2', '\x17', '^', 
		'\x3', '\x2', '\x2', '\x2', '\x19', '\x61', '\x3', '\x2', '\x2', '\x2', 
		'\x1B', '\x65', '\x3', '\x2', '\x2', '\x2', '\x1D', 'm', '\x3', '\x2', 
		'\x2', '\x2', '\x1F', ' ', '\a', '*', '\x2', '\x2', ' ', '\x4', '\x3', 
		'\x2', '\x2', '\x2', '!', '\"', '\a', '+', '\x2', '\x2', '\"', '\x6', 
		'\x3', '\x2', '\x2', '\x2', '#', '$', '\a', 'r', '\x2', '\x2', '$', '%', 
		'\a', 't', '\x2', '\x2', '%', '&', '\a', 'k', '\x2', '\x2', '&', '\'', 
		'\a', 'p', '\x2', '\x2', '\'', '(', '\a', 'v', '\x2', '\x2', '(', ')', 
		'\a', '*', '\x2', '\x2', ')', '\b', '\x3', '\x2', '\x2', '\x2', '*', '+', 
		'\a', '-', '\x2', '\x2', '+', '\n', '\x3', '\x2', '\x2', '\x2', ',', '-', 
		'\a', '/', '\x2', '\x2', '-', '\f', '\x3', '\x2', '\x2', '\x2', '.', '/', 
		'\a', ',', '\x2', '\x2', '/', '\xE', '\x3', '\x2', '\x2', '\x2', '\x30', 
		'\x31', '\a', '\x31', '\x2', '\x2', '\x31', '\x10', '\x3', '\x2', '\x2', 
		'\x2', '\x32', '\x33', '\a', '?', '\x2', '\x2', '\x33', '\x12', '\x3', 
		'\x2', '\x2', '\x2', '\x34', '\x35', '\t', '\x2', '\x2', '\x2', '\x35', 
		'\x14', '\x3', '\x2', '\x2', '\x2', '\x36', '\x38', '\t', '\x3', '\x2', 
		'\x2', '\x37', '\x39', '\t', '\x4', '\x2', '\x2', '\x38', '\x37', '\x3', 
		'\x2', '\x2', '\x2', '\x38', '\x39', '\x3', '\x2', '\x2', '\x2', '\x39', 
		';', '\x3', '\x2', '\x2', '\x2', ':', '<', '\x5', '\x13', '\n', '\x2', 
		';', ':', '\x3', '\x2', '\x2', '\x2', '<', '=', '\x3', '\x2', '\x2', '\x2', 
		'=', ';', '\x3', '\x2', '\x2', '\x2', '=', '>', '\x3', '\x2', '\x2', '\x2', 
		'>', '\x16', '\x3', '\x2', '\x2', '\x2', '?', '\x41', '\x5', '\x13', '\n', 
		'\x2', '@', '?', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\x3', '\x2', 
		'\x2', '\x2', '\x42', '@', '\x3', '\x2', '\x2', '\x2', '\x42', '\x43', 
		'\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\x3', '\x2', '\x2', '\x2', 
		'\x44', 'H', '\a', '\x30', '\x2', '\x2', '\x45', 'G', '\x5', '\x13', '\n', 
		'\x2', '\x46', '\x45', '\x3', '\x2', '\x2', '\x2', 'G', 'J', '\x3', '\x2', 
		'\x2', '\x2', 'H', '\x46', '\x3', '\x2', '\x2', '\x2', 'H', 'I', '\x3', 
		'\x2', '\x2', '\x2', 'I', 'L', '\x3', '\x2', '\x2', '\x2', 'J', 'H', '\x3', 
		'\x2', '\x2', '\x2', 'K', 'M', '\x5', '\x15', '\v', '\x2', 'L', 'K', '\x3', 
		'\x2', '\x2', '\x2', 'L', 'M', '\x3', '\x2', '\x2', '\x2', 'M', '_', '\x3', 
		'\x2', '\x2', '\x2', 'N', 'P', '\a', '\x30', '\x2', '\x2', 'O', 'Q', '\x5', 
		'\x13', '\n', '\x2', 'P', 'O', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\x3', 
		'\x2', '\x2', '\x2', 'R', 'P', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\x3', 
		'\x2', '\x2', '\x2', 'S', 'U', '\x3', '\x2', '\x2', '\x2', 'T', 'V', '\x5', 
		'\x15', '\v', '\x2', 'U', 'T', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\x3', 
		'\x2', '\x2', '\x2', 'V', '_', '\x3', '\x2', '\x2', '\x2', 'W', 'Y', '\x5', 
		'\x13', '\n', '\x2', 'X', 'W', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\x3', 
		'\x2', '\x2', '\x2', 'Z', 'X', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\x3', 
		'\x2', '\x2', '\x2', '[', '\\', '\x3', '\x2', '\x2', '\x2', '\\', ']', 
		'\x5', '\x15', '\v', '\x2', ']', '_', '\x3', '\x2', '\x2', '\x2', '^', 
		'@', '\x3', '\x2', '\x2', '\x2', '^', 'N', '\x3', '\x2', '\x2', '\x2', 
		'^', 'X', '\x3', '\x2', '\x2', '\x2', '_', '\x18', '\x3', '\x2', '\x2', 
		'\x2', '`', '\x62', '\x5', '\x13', '\n', '\x2', '\x61', '`', '\x3', '\x2', 
		'\x2', '\x2', '\x62', '\x63', '\x3', '\x2', '\x2', '\x2', '\x63', '\x61', 
		'\x3', '\x2', '\x2', '\x2', '\x63', '\x64', '\x3', '\x2', '\x2', '\x2', 
		'\x64', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x65', 'i', '\t', '\x5', 
		'\x2', '\x2', '\x66', 'h', '\t', '\x6', '\x2', '\x2', 'g', '\x66', '\x3', 
		'\x2', '\x2', '\x2', 'h', 'k', '\x3', '\x2', '\x2', '\x2', 'i', 'g', '\x3', 
		'\x2', '\x2', '\x2', 'i', 'j', '\x3', '\x2', '\x2', '\x2', 'j', '\x1C', 
		'\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 'l', 
		'n', '\t', '\a', '\x2', '\x2', 'm', 'l', '\x3', '\x2', '\x2', '\x2', 'n', 
		'o', '\x3', '\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', '\x2', '\x2', 
		'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 
		'q', 'r', '\b', '\xF', '\x2', '\x2', 'r', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', '\xF', '\x2', '\x38', '=', '\x42', 'H', 'L', 'R', 'U', 'Z', '^', 
		'\x63', 'i', 'o', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
